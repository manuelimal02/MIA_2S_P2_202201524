{"ast":null,"code":"var _jsxFileName = \"/media/manuelimal02/Data/USAC/6 Sexto Semestre/Manejo E Implementaci\\xF3n De Archivos Laboratorio/PROYECTO_2/frontend/src/pages/Ejecutador.js\",\n  _s2 = $RefreshSig$();\nimport './Ejecutador.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React, { useState } from 'react';\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const UsuarioLogueado = () => {\n    _s();\n    const [loggedUser, setLoggedUser] = useState(\"\");\n\n    // Usar useEffect para cargar el valor de localStorage cuando el componente se monta\n    useEffect(() => {\n      const user = localStorage.getItem(\"loggedUser\"); // Recuperar el valor de localStorage\n      if (user) {\n        setLoggedUser(user); // Establecer el estado si existe el usuario logueado\n      }\n    }, []);\n  };\n\n  // Función para abrir el explorador de archivos\n  _s(UsuarioLogueado, \"lgD7Gbr52K9zAuQnOrbAQHsSeMI=\");\n  const triggerFileSelect = () => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.smia';\n    fileInput.onchange = handleFileSelect;\n    fileInput.click();\n  };\n  const handleFileSelect = event => {\n    const fileInput = event.target.files[0];\n    if (fileInput && fileInput.name.endsWith('.smia')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setInputText(e.target.result);\n      };\n      reader.readAsText(fileInput);\n    } else {\n      Swal.fire(\"Se debe seleccionar un archivo con la extensión '.smia'\", \"Error\", \"error\");\n    }\n  };\n\n  // Función para enviar el texto al backend \"todos los comandos\"\n  const handleExecute = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ProcesarComando', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: inputText\n      });\n      const text = await response.text();\n      setOutputText(text);\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \" + error, \"Error Desconocido\", \"error\");\n      setOutputText('Error al procesar los comandos de entrada.');\n    }\n  };\n\n  // Función para enviar el texto al backend \"logout\"\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ProcesarComando', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: \"logout\"\n      });\n      const text = await response.text();\n      if (text.includes(\"Sesión cerrada con éxito de la partición\")) {\n        Swal.fire(text, \"Cerrando Sesión\", \"success\");\n      } else {\n        Swal.fire(text, \"Error Al Cerrar Sesión\", \"error\");\n      }\n      setOutputText(text);\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \" + error, \"Error Desconocido\", \"error\");\n      setOutputText('Error al procesar los comandos de entrada.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"selectBtn\",\n        onClick: triggerFileSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-folder-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" Seleccionar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"executeBtn\",\n        onClick: handleExecute,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \" Ejecutar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usuarioLogueado\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"txtUsuario\",\n          children: [\"Usuario: \", loggedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logoutBtn\",\n        onClick: handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \" Cerrar Sesi\\xF3n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entrada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"inputArea\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Salida:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"outputArea\",\n        placeholder: \"Salida\",\n        value: outputText,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"A8x4o6k2o0clyglOPj0vqGJjHFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Swal","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","inputText","setInputText","outputText","setOutputText","UsuarioLogueado","loggedUser","setLoggedUser","useEffect","user","localStorage","getItem","triggerFileSelect","fileInput","document","createElement","type","accept","onchange","handleFileSelect","click","event","target","files","name","endsWith","reader","FileReader","onload","e","result","readAsText","fire","handleExecute","response","fetch","method","headers","body","text","error","handleLogout","includes","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","readOnly","_c","$RefreshReg$"],"sources":["/media/manuelimal02/Data/USAC/6 Sexto Semestre/Manejo E Implementación De Archivos Laboratorio/PROYECTO_2/frontend/src/pages/Ejecutador.js"],"sourcesContent":["import './Ejecutador.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React, { useState } from 'react';\nimport Swal from \"sweetalert2\";\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n\n  const UsuarioLogueado = () => {\n    const [loggedUser, setLoggedUser] = useState(\"\");\n  \n    // Usar useEffect para cargar el valor de localStorage cuando el componente se monta\n    useEffect(() => {\n      const user = localStorage.getItem(\"loggedUser\"); // Recuperar el valor de localStorage\n      if (user) {\n        setLoggedUser(user); // Establecer el estado si existe el usuario logueado\n      }\n    }, []);\n  }\n\n  \n  // Función para abrir el explorador de archivos\n  const triggerFileSelect = () => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.smia';\n    fileInput.onchange = handleFileSelect;\n    fileInput.click();\n  };\n\n  const handleFileSelect = (event) => {\n    const fileInput = event.target.files[0];\n    if (fileInput && fileInput.name.endsWith('.smia')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setInputText(e.target.result);\n      };\n      reader.readAsText(fileInput);\n    } else {\n      Swal.fire(\"Se debe seleccionar un archivo con la extensión '.smia'\", \"Error\", \"error\");\n    }\n  };\n\n  // Función para enviar el texto al backend \"todos los comandos\"\n  const handleExecute = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ProcesarComando', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        body: inputText,\n      });\n      const text = await response.text();\n      setOutputText(text);\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \"+error, \"Error Desconocido\", \"error\");\n      setOutputText('Error al procesar los comandos de entrada.'); \n    }\n  };\n\n  // Función para enviar el texto al backend \"logout\"\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ProcesarComando', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        body: \"logout\",\n      });\n      const text = await response.text();\n\n      if (text.includes(\"Sesión cerrada con éxito de la partición\")) {\n        Swal.fire(text, \"Cerrando Sesión\", \"success\");\n      } else {\n        Swal.fire(text, \"Error Al Cerrar Sesión\", \"error\");\n      }\n      setOutputText(text);\n\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \"+error, \"Error Desconocido\", \"error\");\n      setOutputText('Error al procesar los comandos de entrada.'); \n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"buttons\">\n        <button id=\"selectBtn\" onClick={triggerFileSelect}>\n          <i className=\"fas fa-folder-open\"></i> Seleccionar\n        </button>\n        <button id=\"executeBtn\" onClick={handleExecute}>\n          <i className=\"fas fa-play\"></i> Ejecutar\n        </button>\n        <div className='usuarioLogueado'>\n        <h2 className='txtUsuario'>Usuario: {loggedUser}</h2>\n        </div>\n\n        <button id=\"logoutBtn\" onClick={handleLogout}>\n          <i className=\"fas fa-play\"></i> Cerrar Sesión\n        </button>\n      </div>\n\n      <div className=\"input-section\">\n        <h2>Entrada:</h2>\n        <textarea id=\"inputArea\" value={inputText} onChange={(e) => setInputText(e.target.value)}/>\n      </div>\n\n      <div className=\"output-section\">\n        <h2>Salida:</h2>\n        <textarea id=\"outputArea\" placeholder=\"Salida\" value={outputText} readOnly/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}