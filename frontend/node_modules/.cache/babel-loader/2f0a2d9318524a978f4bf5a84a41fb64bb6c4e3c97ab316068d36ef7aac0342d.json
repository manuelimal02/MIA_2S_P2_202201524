{"ast":null,"code":"var _jsxFileName = \"/media/manuelimal02/Data/USAC/6 Sexto Semestre/Manejo E Implementaci\\xF3n De Archivos Laboratorio/PROYECTO_2/frontend/src/pages/Visualizador.js\";\n//import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizador = () => {\n  //const disks = [];\n  //const partitions = [];\n  //const selectedDisk = null;\n\n  // Función para enviar el texto al backend \"logout\"\n  const handleGetPathDisk = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ObtenerDiscos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: \"list\"\n      });\n      const text = await response.text();\n      if (text.includes(\"No hay particiones montadas.\")) {\n        Swal.fire(text, \"No hay particiones montadas\", \"error\");\n      } else {\n        Swal.fire(text, \"Particiones Montadas\", \"success\");\n      }\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \" + error, \"Error Desconocido\", \"error\");\n    }\n  };\n\n  /*const fetchPartitions = (diskPath) => {\n    fetch(\"http://localhost:8080/api/readmbr\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ path: diskPath }), \n    })\n      .then((response) => response.json())\n      .then((data) => {\n        partitions.push(data || []);\n      })\n      .catch((error) => {\n        console.error(\"Error al obtener particiones:\", error);\n        partitions.push([]); \n      });\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"logoutBtn\",\n      onClick: handleGetPathDisk,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), \" Mostrar Discos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Visualizador;\nexport default Visualizador;\nvar _c;\n$RefreshReg$(_c, \"Visualizador\");","map":{"version":3,"names":["Swal","jsxDEV","_jsxDEV","Visualizador","handleGetPathDisk","response","fetch","method","headers","body","text","includes","fire","error","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/manuelimal02/Data/USAC/6 Sexto Semestre/Manejo E Implementación De Archivos Laboratorio/PROYECTO_2/frontend/src/pages/Visualizador.js"],"sourcesContent":["//import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nconst Visualizador = () => {\n  //const disks = [];\n  //const partitions = [];\n  //const selectedDisk = null;\n\n  // Función para enviar el texto al backend \"logout\"\n  const handleGetPathDisk = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/AnalizadorGo/ObtenerDiscos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n        },\n        body: \"list\",\n      });\n      \n      const text = await response.text();\n\n      if (text.includes(\"No hay particiones montadas.\")) {\n        Swal.fire(text, \"No hay particiones montadas\", \"error\");\n      } else {\n        Swal.fire(text, \"Particiones Montadas\", \"success\");\n      }\n\n    } catch (error) {\n      Swal.fire(\"Error Al Enviar Texto: \"+error, \"Error Desconocido\", \"error\");\n    }\n  };\n\n\n  \n  /*const fetchPartitions = (diskPath) => {\n    fetch(\"http://localhost:8080/api/readmbr\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ path: diskPath }), \n    })\n      .then((response) => response.json())\n      .then((data) => {\n        partitions.push(data || []);\n      })\n      .catch((error) => {\n        console.error(\"Error al obtener particiones:\", error);\n        partitions.push([]); \n      });\n  };*/\n\n  return (\n    <div className=\"container mt-5\">\n      <button id=\"logoutBtn\" onClick={handleGetPathDisk}>\n          <i className=\"fas fa-play\"></i> Mostrar Discos\n        </button>\n    </div>\n  );\n};\n\nexport default Visualizador;"],"mappings":";AAAA;AACA,OAAOA,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;EACA;EACA;;EAEA;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;QAC/EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIA,IAAI,CAACC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;QACjDX,IAAI,CAACY,IAAI,CAACF,IAAI,EAAE,6BAA6B,EAAE,OAAO,CAAC;MACzD,CAAC,MAAM;QACLV,IAAI,CAACY,IAAI,CAACF,IAAI,EAAE,sBAAsB,EAAE,SAAS,CAAC;MACpD;IAEF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdb,IAAI,CAACY,IAAI,CAAC,yBAAyB,GAACC,KAAK,EAAE,mBAAmB,EAAE,OAAO,CAAC;IAC1E;EACF,CAAC;;EAID;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACEX,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bb,OAAA;MAAQc,EAAE,EAAC,WAAW;MAACC,OAAO,EAAEb,iBAAkB;MAAAW,QAAA,gBAC9Cb,OAAA;QAAGY,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,mBACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACC,EAAA,GAxDInB,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}